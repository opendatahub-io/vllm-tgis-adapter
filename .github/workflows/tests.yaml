name: Tests

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
  workflow_dispatch:
  schedule:
    - cron: "20 4 * * 2" # once a week

env:
  FORCE_COLOR: "1"
  # facilitate testing by building vLLM for CPU when needed
  VLLM_CPU_DISABLE_AVX512: "true"
  VLLM_TARGET_DEVICE: "cpu"
  # prefer torch cpu version
  PIP_EXTRA_INDEX_URL: "https://download.pytorch.org/whl/cpu"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        pyv: ["3.11"]
        vllm_version:
          # - "pypi" # skip the pypi version as it will not work with CPU
          - "git+https://github.com/vllm-project/vllm@v0.5.0.post1"
          - "git+https://github.com/vllm-project/vllm@main"
          - "git+https://github.com/opendatahub-io/vllm@main"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false
          docker-images: false

      - name: Set up Python ${{ matrix.pyv }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pyv }}

      - name: Upgrade pip and nox
        run: |
          python -m pip install --upgrade pip nox
          pip --version
          nox --version

      - name: Set custom vllm version
        if: ${{ matrix.vllm_version != 'pypi' }}
        run: |
          vllm_version="vllm@${{matrix.vllm_version}}"
          echo "Using vllm@${vllm_version}"

          sed -i "s|\"vllm.*\",|\"${vllm_version}\",|g" pyproject.toml

      - name: Lint code and check dependencies
        run: nox -s lint-${{ matrix.pyv }}

      - name: Run tests
        run: nox -s tests-${{ matrix.pyv }} -- --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build package
        run: nox -s build-${{ matrix.pyv }}
